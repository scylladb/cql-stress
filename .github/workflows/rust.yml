name: Continuous integration

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  CARGO_TERM_COLOR: always
  PYTHONUNBUFFERED: "1"

jobs:
  check:
    name: Check
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          cache: true
      - run: cargo check --all --all-targets
      - run: cargo clippy --tests --no-default-features -- -D warnings
      - name: Clippy check with `user-profile` feature
        run: cargo clippy --tests --features "user-profile" -- -D warnings
      - name: Clippy check with cfg(fetch_extended_version_info)
        run: RUSTFLAGS="--cfg fetch_extended_version_info" cargo clippy --tests -- -D warnings
  fmt:
    name: Format
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
          cache: true
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
          cache: true
      - name: Build cql-stress-cassandra-stress binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --profile dist --all

      - uses: actions/upload-artifact@v4
        with:
          name: cql-stress-cassandra-stress
          path: "./target/dist/cql-stress-cassandra-stress"
          if-no-files-found: error
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: cql-stress-scylla-bench
          path: "./target/dist/cql-stress-scylla-bench"
          if-no-files-found: error
          retention-days: 1
  test:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        cache: true
    - name: Start ScyllaDB
      run: |
        docker compose -f ./docker/scylla-test/compose.yml up -d --wait
        until docker logs scylla_test 2>&1 | grep "Starting listening for CQL clients" > /dev/null; do sleep 0.2; done
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --tests --features "user-profile"
    - uses: actions-rs/cargo@v1
      with:
        command: test
        # test threads must be one because else database tests will run in parallel and will result in flaky tests
        args: --features "user-profile" -- --test-threads=1

  integration-tests:
    needs: [build, test]
    cancel-timeout-minutes: 1
    timeout-minutes: 20
    runs-on: ubuntu-24.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.binary }}
    strategy:
      max-parallel: 2
      matrix:
        binary: [cql-stress-cassandra-stress]
    steps:
      - uses: actions/checkout@v4
      - name: Install python driver
        run: pip install scylla-driver
      - name: Install pytest
        run: pip install -U pytest
      - name: Start ScyllaDB
        run: |
          docker compose -f ./docker/scylla-test/compose.yml up -d --wait
          until docker logs scylla_test 2>&1 | grep "Starting listening for CQL clients" > /dev/null; do sleep 0.2; done
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.binary }}
      - name: C-S frontend tests
        run: |
          mv ${{ matrix.binary }} /usr/local/bin
          chmod +x /usr/local/bin/${{ matrix.binary }}
          pytest -s ./tools/${{ matrix.binary }}-ci.py
