name: "Release"

on:
  push:
    tags:
      - "*"

env:
  RUSTFLAGS: "--cfg fetch_extended_version_info"
  CARGO_TERM_COLOR: always
  PYTHONUNBUFFERED: "1"

jobs:
  get_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Get Tag
        uses: olegtarasov/get-tag@v2.1.3
        id: version_tag
        with:
          tagRegex: "(.*)"

  release:
    runs-on: ubuntu-24.04
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          set +e
          if [[ "$(gh release view $tag 2>&1)" == "release not found" ]]; then
            echo "Release '$tag' not found. Creating..."
            gh release create "$tag" \
                --repo="$GITHUB_REPOSITORY" \
                --title="${GITHUB_REPOSITORY#*/} ${tag#}" \
                --generate-notes
          else
            echo "Release '$tag' found. Skipping this step..."
          fi

  docker_build:
    uses: ./.github/workflows/docker.yml
    needs: [get_tag]
    with:
      version: ${{ needs.get_tag.outputs.tag }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  release-artifacts:
    needs: [get_tag]
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build CQLStressScyllaBench Binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --profile dist --all

      - name: Set Binary Name
        run: |
          BIN_NAME_CS="cql-stress-cassandra-stress-${{ needs.get_tag.outputs.tag }}-${{ matrix.os }}"
          BIN_NAME_SB="cql-stress-scylla-bench-${{ needs.get_tag.outputs.tag }}-${{ matrix.os }}"
          echo "BIN_NAME_CS=$BIN_NAME_CS" >> $GITHUB_ENV
          echo "BIN_NAME_CS=$BIN_NAME_CS"
          echo "BIN_NAME_SB=$BIN_NAME_SB" >> $GITHUB_ENV
          echo "BIN_NAME_SB=$BIN_NAME_SB"

          mv ./target/dist/cql-stress-cassandra-stress ./target/dist/$BIN_NAME_CS
          mv ./target/dist/cql-stress-scylla-bench ./target/dist/$BIN_NAME_SB
        shell: bash

      - name: Get Release Upload URL
        run: |
          UPLOAD_URL=$(gh release view ${{ needs.get_tag.outputs.tag }} --json uploadUrl -q '.uploadUrl' | sed 's/{.*//')
          echo "UPLOAD_URL=${UPLOAD_URL}?name=${{ needs.get_tag.outputs.tag }}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        id: upload-release-asset-cs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./target/dist/cql-stress-cassandra-stress
          asset_name: ${{ env.BIN_NAME_CS }}
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        id: upload-release-asset-sb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./target/dist/cql-stress-scylla-bench
          asset_name: ${{ env.BIN_NAME_SB }}
          asset_content_type: application/octet-stream
